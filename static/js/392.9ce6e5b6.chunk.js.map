{"version":3,"file":"static/js/392.9ce6e5b6.chunk.js","mappings":"wKAgDA,QA1CA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,IAAWD,EAAAA,EAAAA,UAASJ,EAASM,MAAMD,SAgB1C,OAdAE,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,OCViBD,WAC7B,MAAME,EAAG,sCAAAC,OAAyCC,EAAE,YAC9CC,EAAe,IAAIC,gBAAgB,CACvCC,QALY,mCAMZC,SAAU,QACVC,KAAM,IAER,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAU,GAADR,OAAID,EAAG,KAAAC,OAAIE,IACrCJ,QAAaS,EAAST,KACtBW,QAAgBX,EAAKW,QAE3B,OADAC,QAAQC,IAAIF,GACLA,CAGT,CAFE,MAAOG,GACPF,QAAQE,MAAM,qCAAsCA,EACtD,GDLyBC,CAAgBnB,GACnCF,EAAWM,GACXY,QAAQC,IAAIb,EAGd,CAFE,MAAOc,GACPF,QAAQE,MAAM,qCAAsCA,EACtD,CACF,CAEAE,EAAmB,GAClB,CAACpB,KAGFqB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGzB,EAAQ0B,KAAIC,IACXC,EAAAA,EAAAA,MAAA,MAAoBC,UAAU,aAAYJ,SAAA,EACxCD,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAOG,UACZN,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOI,YAFJJ,EAAOjB,SAQ1B,C","sources":["components/Reviews/Reviews.jsx","api/getMovieReviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getMovieReviews } from 'api/getMovieReviews';\n\nfunction Reviews() {\n  const location = useLocation();\n  const [reviews, setReviews] = useState([]);\n  const [movieId] = useState(location.state.movieId);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n        console.log(data);\n      } catch (error) {\n        console.error('Error while fetching movie reviews', error);\n      }\n    }\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id} className=\"ReviewList\">\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'c065ab5e538040cab742d0cd9aa41895';\n\nexport const getMovieReviews = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n  try {\n    const response = await axios.get(`${URL}?${searchParams}`);\n    const data = await response.data;\n    const results = await data.results;\n    console.log(results);\n    return results;\n  } catch (error) {\n    console.error('Error while fetching movie reviews', error);\n  }\n};\n"],"names":["location","useLocation","reviews","setReviews","useState","movieId","state","useEffect","async","data","URL","concat","id","searchParams","URLSearchParams","api_key","language","page","response","axios","results","console","log","error","getMovieReviews","fetchMovieReviews","_jsx","children","map","review","_jsxs","className","author","content"],"sourceRoot":""}