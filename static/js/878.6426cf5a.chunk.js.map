{"version":3,"file":"static/js/878.6426cf5a.chunk.js","mappings":"gLAmFA,QA7EA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,IAAWD,EAAAA,EAAAA,UAASJ,EAASM,MAAMD,SAe1C,OAbAE,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,OCViBD,WAC7B,MAAME,EAAG,sCAAAC,OAAyCC,GAC5CC,EAAe,IAAIC,gBAAgB,CACvCC,QALY,mCAMZC,SAAU,UAEZ,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAU,GAADP,OAAID,EAAG,KAAAC,OAAIE,IAE3C,aADmBI,EAASR,IAI9B,CAFE,MAAOU,GACPC,QAAQD,MAAM,qCAAsCA,EACtD,GDFyBE,CAAgBhB,GACnCF,EAAWM,EAGb,CAFE,MAAOU,GACPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,CAEAG,EAAmB,GAClB,CAACjB,IAECH,GAKHqB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,OACEC,IAAG,mCAAAhB,OAAqCT,EAAQ0B,aAChDC,IAAK3B,EAAQ4B,MACbL,UAAU,gBAEZF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,KAAA,MAAAF,SAAKtB,EAAQ4B,SACbP,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAatB,EAAQ6B,iBACxBL,EAAAA,EAAAA,KAAA,MAAAF,SAAI,cACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAItB,EAAQ8B,YACZN,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YACJE,EAAAA,EAAAA,KAAA,KAAAF,SACGtB,EAAQ+B,OAAOC,KAAIC,IAClBZ,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAsBW,EAAMC,KAAK,OAAtBD,EAAMvB,SAGrBc,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAItC,EAASM,MAAMiC,KAAMjC,MAAO,CAAEiC,KAAMvC,GAAWwB,SAAC,mBAK9DD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,SAAC,4BAC/BD,EAAAA,EAAAA,MAAA,MAAIE,UAAU,sBAAqBD,SAAA,EACjCE,EAAAA,EAAAA,KAACc,EAAAA,GAAM,KACPd,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,OAAOhC,MAAO,CAAEiC,KAAMvC,EAAUK,QAASA,GAAUmB,SAAC,YAI/DE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,UAAUhC,MAAO,CAAEiC,KAAMvC,EAAUK,QAASA,GAAUmB,SAAC,wBArCjEE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,cA6ChB,C","sources":["components/MovieDetails/MovieDetails.jsx","api/getMovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getMovieDetails } from 'api/getMovieDetails';\n\nfunction MovieDetails() {\n  const location = useLocation();\n  const [details, setDetails] = useState(null);\n  const [movieId] = useState(location.state.movieId);\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const data = await getMovieDetails(movieId);\n        setDetails(data);\n      } catch (error) {\n        console.error('Error while fetching movie details', error);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!details) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"MovieContainer\">\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n          alt={details.title}\n          className=\"DetailsImg\"\n        />\n        <div className=\"MovieInfo\">\n          <h2>{details.title}</h2>\n          <p>User Score: {details.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{details.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {details.genres.map(genre => (\n              <span key={genre.id}>{genre.name}, </span>\n            ))}\n          </p>\n          <Link to={location.state.from} state={{ from: location }}>\n            Go back\n          </Link>\n        </div>\n      </div>\n      <div>\n        <h2 className=\"AdditionalInfo\">Additional Information</h2>\n        <ul className=\"AdditionalContainer\">\n          <Outlet />\n          <li>\n            <Link to=\"cast\" state={{ from: location, movieId: movieId }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location, movieId: movieId }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  details: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c065ab5e538040cab742d0cd9aa41895';\n\nexport const getMovieDetails = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n  });\n  try {\n    const response = await axios.get(`${URL}?${searchParams}`);\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error('Error while fetching movie details', error);\n  }\n};\n"],"names":["location","useLocation","details","setDetails","useState","movieId","state","useEffect","async","data","URL","concat","id","searchParams","URLSearchParams","api_key","language","response","axios","error","console","getMovieDetails","fetchMovieDetails","_jsxs","children","className","_jsx","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","Link","to","from","Outlet"],"sourceRoot":""}