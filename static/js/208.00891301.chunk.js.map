{"version":3,"file":"static/js/208.00891301.chunk.js","mappings":"wKA0DA,QApDA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,IAAWD,EAAAA,EAAAA,UAASJ,EAASM,MAAMD,SAe1C,OAbAE,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,OCViBD,WAC7B,MAAME,EAAG,sCAAAC,OAAyCN,EAAO,YACnDO,EAAe,IAAIC,gBAAgB,CACvCC,QALY,mCAMZC,SAAU,QACVC,KAAM,IAER,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAU,GAADP,OAAID,EAAG,KAAAC,OAAIC,IAG3C,aAFmBK,EAASR,MACVU,IAIpB,CAFE,MAAOC,GACPC,QAAQD,MAAM,sCAAuCA,EACvD,GDJyBE,CAAgBjB,GACnCF,EAAWM,EAGb,CAFE,MAAOW,GACPC,QAAQD,MAAM,qCAAsCA,EACtD,CACF,CAEAG,EAAmB,GAClB,CAAClB,KAGFmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtBxB,EAAQyB,KAAIC,IACXC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEC,UAAU,UACVK,IACEF,EAAMG,aAAY,mCAAApB,OACqBiB,EAAMG,cACzC,oGAENC,IAAKJ,EAAMK,QAEbT,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAMK,QACVJ,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,cAAYE,EAAMM,eAXdN,EAAMO,SAiBzB,C","sources":["components/Cast/Cast.jsx","api/getMovieCredits.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { getMovieCredits } from 'api/getMovieCredits';\n\nfunction Cast() {\n  const location = useLocation();\n  const [credits, setCredits] = useState([]);\n  const [movieId] = useState(location.state.movieId);\n\n  useEffect(() => {\n    async function fetchMovieCredits() {\n      try {\n        const data = await getMovieCredits(movieId);\n        setCredits(data);\n      } catch (error) {\n        console.error('Error while fetching movie credits', error);\n      }\n    }\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div className=\"ActorContainer\">\n      <ul className=\"ActorList\">\n        {credits.map(actor => (\n          <li key={actor.id}>\n            <img\n              className=\"CastImg\"\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                  : 'https://d32qys9a6wm9no.cloudfront.net/images/others/not_available/poster_500x735.png?t=1699920683'\n              }\n              alt={actor.name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c065ab5e538040cab742d0cd9aa41895';\n\nexport const getMovieCredits = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n  try {\n    const response = await axios.get(`${URL}?${searchParams}`);\n    const data = await response.data;\n    const cast = data.cast;\n    return cast;\n  } catch (error) {\n    console.error('Error while fetching movie credits:', error);\n  }\n};\n"],"names":["location","useLocation","credits","setCredits","useState","movieId","state","useEffect","async","data","URL","concat","searchParams","URLSearchParams","api_key","language","page","response","axios","cast","error","console","getMovieCredits","fetchMovieCredits","_jsx","className","children","map","actor","_jsxs","src","profile_path","alt","name","character","id"],"sourceRoot":""}